{"ast":null,"code":"var _jsxFileName = \"/home/hugo/Documentos/react-apps/fullstackopen/phonebook/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport personService from './services/persons';\nimport './App.css';\nimport AddPerson from './components/AddPerson';\nimport Persons from './components/Persons';\nimport Search from './components/Search';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notificationMsg, setNotificacionMsg] = useState(null);\n  const [isError, setIsError] = useState(false);\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n  const handleNewName = e => {\n    setNewName(e.target.value);\n  };\n  const handlePhoneNumber = e => {\n    setPhoneNumber(e.target.value);\n  };\n  const handleFilter = e => {\n    setFilter(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newName === '' || phoneNumber === '') {\n      alert('Name and Phone are required!');\n    } else {\n      const newPersonObj = {\n        name: newName,\n        number: phoneNumber\n      };\n      const person = persons.find(p => p.name.toLowerCase() === newPersonObj.name.toLowerCase());\n      if (person !== undefined) {\n        const answer = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n        if (answer) {\n          const updatedPerson = {\n            ...person,\n            number: phoneNumber\n          };\n          personService.update(updatedPerson).then(returnedPerson => {\n            const updatedPersonsArr = persons.map(p => p.name !== updatedPerson.name ? p : returnedPerson);\n            setPersons(updatedPersonsArr);\n            console.log(returnedPerson);\n            setNotificacionMsg(`Updated ${updatedPerson.name}`);\n            setNewName('');\n            setPhoneNumber('');\n            setIsError(false);\n            setTimeout(() => {\n              setNotificacionMsg(null);\n            }, 5000);\n          }).catch(error => {\n            console.log(Object.values(error.response.data));\n            // setNotificacionMsg(error.response.data.error)\n            // setIsError(true)\n            // setTimeout(() => {\n            //   setNotificacionMsg(null)\n            // }, 5000)\n          });\n        }\n      } else {\n        personService.create(newPersonObj).then(returnedPerson => {\n          setPersons([...persons, returnedPerson]);\n          setNotificacionMsg(`Added ${newPersonObj.name}`);\n          setNewName('');\n          setPhoneNumber('');\n          setIsError(false);\n          setTimeout(() => {\n            setNotificacionMsg(null);\n          }, 5000);\n        }).catch(error => {\n          console.log(error.response.data);\n          setNotificacionMsg('Name is required and must be at least 3 characters.');\n          setIsError(true);\n          setTimeout(() => {\n            setNotificacionMsg(null);\n          }, 5000);\n        });\n      }\n    }\n  };\n  const deletePerson = id => {\n    const personToRemove = persons.find(person => person.id === id);\n    if (window.confirm(`Delete ${personToRemove.name} ?`)) {\n      personService.remove(id).then(returnedPerson => {\n        const newPersonsArr = persons.filter(person => person.id !== id);\n        setPersons(newPersonsArr);\n      }).catch(error => {\n        if (error.response.status === 404) {\n          setNotificacionMsg(`Information of ${personToRemove.name} has already been removed from server`);\n          setIsError(true);\n          setTimeout(() => {\n            setNotificacionMsg(null);\n          }, 5000);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), notificationMsg !== null && /*#__PURE__*/_jsxDEV(Notification, {\n      message: notificationMsg,\n      isError: isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      handleFilter: handleFilter,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPerson, {\n      handleSubmit: handleSubmit,\n      handleNewName: handleNewName,\n      handlePhoneNumber: handlePhoneNumber,\n      newName: newName,\n      phoneNumber: phoneNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: personsToShow,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y9vh58TrqWHxpFsMpmg3eOGPX1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","personService","AddPerson","Persons","Search","Notification","jsxDEV","_jsxDEV","App","_s","persons","setPersons","newName","setNewName","phoneNumber","setPhoneNumber","filter","setFilter","notificationMsg","setNotificacionMsg","isError","setIsError","personsToShow","person","name","toLowerCase","includes","getAll","then","initialPersons","handleNewName","e","target","value","handlePhoneNumber","handleFilter","handleSubmit","preventDefault","alert","newPersonObj","number","find","p","undefined","answer","window","confirm","updatedPerson","update","returnedPerson","updatedPersonsArr","map","console","log","setTimeout","catch","error","Object","values","response","data","create","deletePerson","id","personToRemove","remove","newPersonsArr","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["/home/hugo/Documentos/react-apps/fullstackopen/phonebook/client/src/App.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react'\nimport personService from './services/persons'\nimport './App.css'\nimport AddPerson from './components/AddPerson'\nimport Persons from './components/Persons'\nimport Search from './components/Search'\nimport Notification from './components/Notification'\n\nfunction App() {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [phoneNumber, setPhoneNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationMsg, setNotificacionMsg] = useState(null)\n  const [isError, setIsError] = useState(false)\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons=> {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNewName = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handlePhoneNumber = (e) => {\n    setPhoneNumber(e.target.value)\n  }\n\n  const handleFilter = (e) => {\n    setFilter(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(newName === '' || phoneNumber === '') {\n      alert('Name and Phone are required!')\n    } else {\n      const newPersonObj = {\n        name: newName,\n        number: phoneNumber\n      }\n      \n      const person = persons.find(p => p.name.toLowerCase() === newPersonObj.name.toLowerCase())\n      \n      if(person !== undefined) {\n        const answer = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n        if(answer) {\n          const updatedPerson = {...person, number: phoneNumber}\n          personService\n            .update(updatedPerson)\n            .then(returnedPerson => {\n              const updatedPersonsArr = persons.map(p => p.name !== updatedPerson.name ? p : returnedPerson)\n              setPersons(updatedPersonsArr)\n              console.log(returnedPerson)\n              setNotificacionMsg(`Updated ${updatedPerson.name}`)\n              setNewName('')\n              setPhoneNumber('')\n              setIsError(false)\n              setTimeout(() => {\n                setNotificacionMsg(null)\n              }, 5000)\n            })\n            .catch(error => {\n              console.log(Object.values(error.response.data))\n              // setNotificacionMsg(error.response.data.error)\n              // setIsError(true)\n              // setTimeout(() => {\n              //   setNotificacionMsg(null)\n              // }, 5000)\n            })\n        }\n      } else {\n        personService\n          .create(newPersonObj)\n          .then(returnedPerson => {\n            setPersons([...persons, returnedPerson])\n            setNotificacionMsg(`Added ${newPersonObj.name}`)\n            setNewName('')\n            setPhoneNumber('')\n            setIsError(false)\n            setTimeout(() => {\n              setNotificacionMsg(null)\n            }, 5000)\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            setNotificacionMsg('Name is required and must be at least 3 characters.')\n            setIsError(true)\n            setTimeout(() => {\n              setNotificacionMsg(null)\n            }, 5000)\n          })\n      }\n    }\n  }\n\n  const deletePerson = (id) => {\n    const personToRemove = persons.find(person => person.id === id)\n    if(window.confirm(`Delete ${personToRemove.name} ?`)) {\n      personService\n      .remove(id)\n      .then(returnedPerson => {\n        const newPersonsArr = persons.filter(person => person.id !== id)\n        setPersons(newPersonsArr)\n      })\n      .catch(error => {\n        if(error.response.status === 404) {\n          setNotificacionMsg(`Information of ${personToRemove.name} has already been removed from server`)\n          setIsError(true)\n          setTimeout(() => {\n            setNotificacionMsg(null)\n          }, 5000) \n        }\n      })\n    }\n  }\n\n  return (\n    <div className='app'>\n      <h2>Phonebook</h2>\n      {\n        notificationMsg !== null && (<Notification message={notificationMsg} isError={isError} />)\n      }\n      <Search \n        handleFilter={handleFilter}\n        filter={filter}\n      />\n      <AddPerson\n        handleSubmit={handleSubmit}\n        handleNewName={handleNewName}\n        handlePhoneNumber={handlePhoneNumber}\n        newName={newName}\n        phoneNumber={phoneNumber}\n      />\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}